/*
 *	libm7.h
 *
 *	(c) 2020 Stuart Hunter
 *
 *	TODO:	
 *
 *	This program is free software: you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation, either version 3 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	See <http://www.gnu.org/licenses/> to get a copy of the GNU General
 *	Public License.
 *
 */

#ifndef OLEDLIBM7_H
#define OLEDLIBM7_H

#include <stdint.h>
#include "gfxfont.h"

const uint8_t LiberationMono_Regular7pt7bBitmaps[]  = {
  0xFF, 0x50, 0xC0, 0x99, 0x99, 0x12, 0x24, 0x7F, 0x24, 0x24, 0xFE, 0x44,
  0x48, 0x48, 0x08, 0x79, 0x2A, 0x44, 0x87, 0x82, 0x85, 0x4A, 0xF8, 0x20,
  0xE2, 0x92, 0x94, 0xE8, 0x08, 0x17, 0x29, 0x29, 0x47, 0x3C, 0x24, 0x24,
  0x38, 0x72, 0xD2, 0x8C, 0xC4, 0x7B, 0xFD, 0x32, 0x44, 0xCC, 0x8C, 0xC4,
  0x42, 0x30, 0xC4, 0x22, 0x33, 0x33, 0x32, 0x24, 0xC0, 0x2B, 0x66, 0x90,
  0x10, 0x41, 0x3F, 0x10, 0x41, 0x00, 0x5A, 0x40, 0xF0, 0xF0, 0x04, 0x20,
  0x84, 0x10, 0x82, 0x10, 0x42, 0x00, 0x7B, 0x38, 0x61, 0xB6, 0x18, 0x73,
  0x78, 0x10, 0x63, 0x40, 0x81, 0x02, 0x04, 0x08, 0xFE, 0x7B, 0x38, 0x43,
  0x18, 0xC6, 0x30, 0xFC, 0x7B, 0x38, 0x43, 0x30, 0x38, 0x71, 0x78, 0x18,
  0x62, 0x92, 0x4A, 0x2F, 0xC2, 0x08, 0xFF, 0x08, 0x2E, 0xCC, 0x10, 0x63,
  0x78, 0x39, 0x38, 0x2E, 0xCE, 0x18, 0x53, 0x78, 0xFC, 0x30, 0x84, 0x10,
  0xC2, 0x08, 0x20, 0x7B, 0x38, 0x73, 0x33, 0x38, 0x71, 0x78, 0x7B, 0x38,
  0x61, 0xCD, 0xD0, 0x72, 0x70, 0xF0, 0x3C, 0x6C, 0x00, 0xD2, 0x80, 0x04,
  0x6E, 0x20, 0xE0, 0x60, 0x40, 0xFC, 0x00, 0x3F, 0x81, 0x81, 0xC1, 0x1D,
  0x88, 0x00, 0x7B, 0x38, 0x43, 0x08, 0xC2, 0x00, 0x20, 0x1C, 0x22, 0x42,
  0x5D, 0xA5, 0xA5, 0xA5, 0xAE, 0xB6, 0x40, 0x42, 0x3C, 0x18, 0x18, 0x24,
  0x24, 0x24, 0x7E, 0x42, 0x42, 0x81, 0xF9, 0x1A, 0x14, 0x6F, 0x90, 0xA1,
  0x42, 0xF8, 0x3B, 0x38, 0x60, 0x82, 0x08, 0x53, 0x38, 0xF2, 0x38, 0x61,
  0x86, 0x18, 0x63, 0xF8, 0xFE, 0x08, 0x20, 0xFE, 0x08, 0x20, 0xFC, 0xFF,
  0x0C, 0x30, 0xFF, 0x0C, 0x30, 0xC0, 0x33, 0x38, 0x60, 0x9E, 0x18, 0x71,
  0x78, 0x86, 0x18, 0x61, 0xFE, 0x18, 0x61, 0x84, 0xFC, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0xFC, 0x38, 0x42, 0x10, 0x87, 0x39, 0x70, 0x85, 0x12, 0x45,
  0x0D, 0x1A, 0x22, 0x46, 0x86, 0x84, 0x21, 0x08, 0x42, 0x10, 0xF8, 0xCF,
  0x3C, 0xED, 0xB6, 0xD8, 0x61, 0x84, 0xC7, 0x1A, 0x69, 0xB6, 0x59, 0x63,
  0x8C, 0x7B, 0x38, 0x61, 0x86, 0x18, 0x73, 0x78, 0xFA, 0x38, 0x61, 0x8F,
  0xE8, 0x20, 0x80, 0x7B, 0x38, 0x61, 0x86, 0x18, 0x73, 0x78, 0x40, 0xC0,
  0xF9, 0x0A, 0x14, 0x2F, 0x92, 0x22, 0x46, 0x84, 0x7A, 0x18, 0x30, 0x38,
  0x10, 0x61, 0x78, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x86, 0x18, 0x61, 0x86, 0x18, 0x73, 0x78, 0xC3, 0x42, 0x42, 0x66, 0x24,
  0x24, 0x3C, 0x18, 0x18, 0x81, 0x81, 0xDB, 0x5A, 0x5A, 0x5A, 0x66, 0x66,
  0x66, 0x42, 0x66, 0x24, 0x18, 0x18, 0x18, 0x24, 0x66, 0x42, 0xC3, 0x42,
  0x66, 0x24, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x06, 0x04, 0x08, 0x18,
  0x30, 0x20, 0x40, 0xFF, 0xF2, 0x49, 0x24, 0x92, 0x4E, 0x81, 0x04, 0x08,
  0x20, 0x41, 0x02, 0x08, 0x10, 0xE4, 0x92, 0x49, 0x24, 0x9E, 0x30, 0xC4,
  0x92, 0x8E, 0x10, 0xFF, 0x88, 0x79, 0x90, 0x33, 0xE8, 0xD1, 0xBD, 0x80,
  0x82, 0x08, 0x2E, 0xCF, 0x18, 0x71, 0xCE, 0xE0, 0x7B, 0x38, 0x20, 0x83,
  0x37, 0x80, 0x04, 0x10, 0x5D, 0xCE, 0x18, 0x63, 0xCD, 0xD0, 0x7B, 0x38,
  0x7F, 0x83, 0x17, 0x80, 0x3C, 0x82, 0x3F, 0x20, 0x82, 0x08, 0x20, 0x80,
  0x77, 0x38, 0xE1, 0x8F, 0x37, 0x41, 0x4D, 0xE0, 0x82, 0x08, 0x2E, 0xCE,
  0x18, 0x61, 0x86, 0x10, 0x10, 0x00, 0x07, 0x81, 0x02, 0x04, 0x08, 0x11,
  0xFC, 0x18, 0x01, 0xF1, 0x8C, 0x63, 0x18, 0xC4, 0x2F, 0x00, 0x84, 0x21,
  0x3B, 0x53, 0x94, 0x94, 0x40, 0x70, 0x41, 0x04, 0x10, 0x41, 0x04, 0x13,
  0xF0, 0xEE, 0xDB, 0x6D, 0xB6, 0xDB, 0x40, 0xBB, 0x38, 0x61, 0x86, 0x18,
  0x40, 0x7B, 0x38, 0x61, 0x87, 0x37, 0x80, 0xBB, 0x3C, 0x61, 0xC7, 0x3B,
  0xA0, 0x82, 0x00, 0x77, 0x38, 0xE1, 0x8F, 0x37, 0x41, 0x04, 0x10, 0xBE,
  0x21, 0x08, 0x42, 0x00, 0x7B, 0x3C, 0x0E, 0x06, 0x17, 0x80, 0x21, 0x8F,
  0xD8, 0x61, 0x86, 0x18, 0x3C, 0x86, 0x18, 0x61, 0x87, 0x37, 0x40, 0x42,
  0x42, 0x66, 0x24, 0x24, 0x18, 0x18, 0x81, 0xC3, 0x5A, 0x5A, 0x5A, 0x66,
  0x66, 0x8D, 0x23, 0x0C, 0x71, 0x28, 0x40, 0x42, 0x42, 0x26, 0x24, 0x34,
  0x18, 0x18, 0x10, 0x10, 0x60, 0xFC, 0x21, 0x0C, 0x63, 0x0F, 0xC0, 0x1C,
  0xC2, 0x08, 0x20, 0x8C, 0x08, 0x20, 0x82, 0x0C, 0x1C, 0xFF, 0xFF, 0xFF,
  0xC0, 0xE0, 0xC1, 0x04, 0x10, 0x40, 0xC4, 0x10, 0x41, 0x0C, 0xE0, 0xE0,
  0x70 };

const GFXglyph LiberationMono_Regular7pt7bGlyphs[] = {
  {     0,   0,   0,   8,    0,    1 },   // 0x20 ' '
  {     0,   2,   9,   8,    3,   -8 },   // 0x21 '!'
  {     3,   4,   4,   8,    2,   -9 },   // 0x22 '"'
  {     5,   8,   9,   8,    0,   -8 },   // 0x23 '#'
  {    14,   7,  11,   8,    0,   -9 },   // 0x24 '$'
  {    24,   8,   9,   8,    0,   -8 },   // 0x25 '%'
  {    33,   8,   9,   8,    0,   -8 },   // 0x26 '&'
  {    42,   2,   4,   8,    3,   -9 },   // 0x27 '''
  {    43,   4,  13,   8,    2,   -9 },   // 0x28 '('
  {    50,   4,  13,   8,    2,   -9 },   // 0x29 ')'
  {    57,   4,   5,   8,    2,   -9 },   // 0x2A '*'
  {    60,   6,   7,   8,    1,   -7 },   // 0x2B '+'
  {    66,   3,   4,   8,    2,   -1 },   // 0x2C ','
  {    68,   4,   1,   8,    2,   -3 },   // 0x2D '-'
  {    69,   2,   2,   8,    3,   -1 },   // 0x2E '.'
  {    70,   6,  10,   8,    1,   -9 },   // 0x2F '/'
  {    78,   6,   9,   8,    1,   -8 },   // 0x30 '0'
  {    85,   7,   9,   8,    1,   -8 },   // 0x31 '1'
  {    93,   6,   9,   8,    1,   -8 },   // 0x32 '2'
  {   100,   6,   9,   8,    1,   -8 },   // 0x33 '3'
  {   107,   6,   9,   8,    1,   -8 },   // 0x34 '4'
  {   114,   6,   9,   8,    1,   -8 },   // 0x35 '5'
  {   121,   6,   9,   8,    1,   -8 },   // 0x36 '6'
  {   128,   6,   9,   8,    1,   -8 },   // 0x37 '7'
  {   135,   6,   9,   8,    1,   -8 },   // 0x38 '8'
  {   142,   6,   9,   8,    1,   -8 },   // 0x39 '9'
  {   149,   2,   7,   8,    3,   -6 },   // 0x3A ':'
  {   151,   3,   9,   8,    2,   -6 },   // 0x3B ';'
  {   155,   6,   7,   8,    1,   -7 },   // 0x3C '<'
  {   161,   6,   4,   8,    1,   -5 },   // 0x3D '='
  {   164,   6,   7,   8,    1,   -7 },   // 0x3E '>'
  {   170,   6,   9,   8,    1,   -8 },   // 0x3F '?'
  {   177,   8,  12,   8,    0,   -9 },   // 0x40 '@'
  {   189,   8,   9,   8,    0,   -8 },   // 0x41 'A'
  {   198,   7,   9,   8,    1,   -8 },   // 0x42 'B'
  {   206,   6,   9,   8,    1,   -8 },   // 0x43 'C'
  {   213,   6,   9,   8,    1,   -8 },   // 0x44 'D'
  {   220,   6,   9,   8,    1,   -8 },   // 0x45 'E'
  {   227,   6,   9,   8,    1,   -8 },   // 0x46 'F'
  {   234,   6,   9,   8,    1,   -8 },   // 0x47 'G'
  {   241,   6,   9,   8,    1,   -8 },   // 0x48 'H'
  {   248,   6,   9,   8,    1,   -8 },   // 0x49 'I'
  {   255,   5,   9,   8,    1,   -8 },   // 0x4A 'J'
  {   261,   7,   9,   8,    1,   -8 },   // 0x4B 'K'
  {   269,   5,   9,   8,    2,   -8 },   // 0x4C 'L'
  {   275,   6,   9,   8,    1,   -8 },   // 0x4D 'M'
  {   282,   6,   9,   8,    1,   -8 },   // 0x4E 'N'
  {   289,   6,   9,   8,    1,   -8 },   // 0x4F 'O'
  {   296,   6,   9,   8,    1,   -8 },   // 0x50 'P'
  {   303,   6,  11,   8,    1,   -8 },   // 0x51 'Q'
  {   312,   7,   9,   8,    1,   -8 },   // 0x52 'R'
  {   320,   6,   9,   8,    1,   -8 },   // 0x53 'S'
  {   327,   8,   9,   8,    0,   -8 },   // 0x54 'T'
  {   336,   6,   9,   8,    1,   -8 },   // 0x55 'U'
  {   343,   8,   9,   8,    0,   -8 },   // 0x56 'V'
  {   352,   8,   9,   8,    0,   -8 },   // 0x57 'W'
  {   361,   8,   9,   8,    0,   -8 },   // 0x58 'X'
  {   370,   8,   9,   8,    0,   -8 },   // 0x59 'Y'
  {   379,   8,   9,   8,    0,   -8 },   // 0x5A 'Z'
  {   388,   3,  13,   8,    3,   -9 },   // 0x5B '['
  {   393,   6,  10,   8,    1,   -9 },   // 0x5C '\'
  {   401,   3,  13,   8,    2,   -9 },   // 0x5D ']'
  {   406,   6,   6,   8,    1,   -8 },   // 0x5E '^'
  {   411,   8,   1,   8,    0,    2 },   // 0x5F '_'
  {   412,   3,   2,   8,    3,   -9 },   // 0x60 '`'
  {   413,   7,   7,   8,    1,   -6 },   // 0x61 'a'
  {   420,   6,  10,   8,    1,   -9 },   // 0x62 'b'
  {   428,   6,   7,   8,    1,   -6 },   // 0x63 'c'
  {   434,   6,  10,   8,    1,   -9 },   // 0x64 'd'
  {   442,   6,   7,   8,    1,   -6 },   // 0x65 'e'
  {   448,   6,  10,   8,    1,   -9 },   // 0x66 'f'
  {   456,   6,  10,   8,    1,   -6 },   // 0x67 'g'
  {   464,   6,  10,   8,    1,   -9 },   // 0x68 'h'
  {   472,   7,  10,   8,    1,   -9 },   // 0x69 'i'
  {   481,   5,  13,   8,    1,   -9 },   // 0x6A 'j'
  {   490,   5,  10,   8,    2,   -9 },   // 0x6B 'k'
  {   497,   6,  10,   8,    1,   -9 },   // 0x6C 'l'
  {   505,   6,   7,   8,    1,   -6 },   // 0x6D 'm'
  {   511,   6,   7,   8,    1,   -6 },   // 0x6E 'n'
  {   517,   6,   7,   8,    1,   -6 },   // 0x6F 'o'
  {   523,   6,  10,   8,    1,   -6 },   // 0x70 'p'
  {   531,   6,  10,   8,    1,   -6 },   // 0x71 'q'
  {   539,   5,   7,   8,    2,   -6 },   // 0x72 'r'
  {   544,   6,   7,   8,    1,   -6 },   // 0x73 's'
  {   550,   6,   9,   8,    1,   -8 },   // 0x74 't'
  {   557,   6,   7,   8,    1,   -6 },   // 0x75 'u'
  {   563,   8,   7,   8,    0,   -6 },   // 0x76 'v'
  {   570,   8,   7,   8,    0,   -6 },   // 0x77 'w'
  {   577,   6,   7,   8,    1,   -6 },   // 0x78 'x'
  {   583,   8,  10,   8,    0,   -6 },   // 0x79 'y'
  {   593,   6,   7,   8,    1,   -6 },   // 0x7A 'z'
  {   599,   6,  13,   8,    1,   -9 },   // 0x7B '{'
  {   609,   2,  13,   8,    3,   -9 },   // 0x7C '|'
  {   613,   6,  13,   8,    1,   -9 },   // 0x7D '}'
  {   623,   6,   2,   8,    1,   -5 } }; // 0x7E '~'

const GFXfont LiberationMono_Regular7pt7b = {
  (uint8_t  *)LiberationMono_Regular7pt7bBitmaps,
  (GFXglyph *)LiberationMono_Regular7pt7bGlyphs,
  0x20, 0x7E, 16 };

// Approx. 1297 bytes

#endif